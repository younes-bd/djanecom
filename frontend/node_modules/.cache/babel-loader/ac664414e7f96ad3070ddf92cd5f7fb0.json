{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\younes\\\\Desktop\\\\ecommerce\\\\frontend\\\\src\\\\screens\\\\RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Button, Form, FormLabel, FormControl } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport FormContainer from '../components/FormContainer';\nimport { register } from '../actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterScreen({\n  location,\n  history\n}) {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    error,\n    loading,\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password != confirmPassword) {\n      setMessage('password donot match');\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"name\",\n          placeholder: \"Enter name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email Address \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"email\",\n          placeholder: \"Enter email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"password\",\n          placeholder: \"Enter Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"passwordConfirm\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \" Confirm Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \" register \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-3\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [\"have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: redirect ? `/login?redirect=${redirect}` : '/login',\n          children: \"sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RegisterScreen, \"M0yz8IUSErD0MDxj/xU1+ioDplw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["C:/Users/younes/Desktop/ecommerce/frontend/src/screens/RegisterScreen.js"],"names":["React","useState","useEffect","Link","Row","Col","Button","Form","FormLabel","FormControl","useDispatch","useSelector","Loader","Message","FormContainer","register","RegisterScreen","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","redirect","search","split","userRegister","state","error","loading","userInfo","userLogin","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Row, Col, Button, Form, FormLabel, FormControl} from 'react-bootstrap'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\n\r\nfunction RegisterScreen({location, history}) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password != confirmPassword){\r\n            setMessage('password donot match')\r\n        }else{\r\n            dispatch(register(name, email, password))\r\n        } \r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n          <h1> sign in</h1>\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {loading && <Loader />}\r\n          <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                  <Form.Label>Name </Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    type= 'name'\r\n                    placeholder= 'Enter name'\r\n                    value= {name}\r\n                    onChange={(e)=> setName(e.target.value)}\r\n                  >\r\n                </Form.Control>\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId='email'>\r\n                  <Form.Label>Email Address </Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    type= 'email'\r\n                    placeholder= 'Enter email'\r\n                    value= {email}\r\n                    onChange={(e)=> setEmail(e.target.value)}\r\n                  >\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='password'>\r\n                <Form.Label>Password </Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    type= 'password'\r\n                    placeholder= 'Enter Password'\r\n                    value= {password}\r\n                    onChange={(e)=> setPassword(e.target.value)}\r\n                  >\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='passwordConfirm'>\r\n                <Form.Label> Confirm Password </Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    type= 'password'\r\n                    placeholder= 'Confirm Password'\r\n                    value= {confirmPassword}\r\n                    onChange={(e)=> setConfirmPassword(e.target.value)}\r\n                  >\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Button type='submit' variant='primary'> register </Button>\r\n         </Form>\r\n         <Row className='py-3'>\r\n                <Col>\r\n                    have an account? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        sign in\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n"]},"metadata":{},"sourceType":"module"}