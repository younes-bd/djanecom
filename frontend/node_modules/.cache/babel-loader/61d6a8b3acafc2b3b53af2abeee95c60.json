{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\younes\\\\Desktop\\\\ecommerce\\\\frontend\\\\src\\\\screens\\\\ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { listProductDetails } from '../actions/productActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProductScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const [qty, setQty] = useState(1);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \" btn btn-light my-3\",\n      children: \" go Back \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: product.image,\n          alt: product.name,\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Rating, {\n              vlue: product.rating,\n              text: `${product.numReviews} reviews`,\n              color: '#f8e825'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"price: $\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Description: $\", product.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"price:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\"$\", product.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: product.countInStock > 0 ? 'in stock' : 'out of stock'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), product.countInStock > 0 && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Qty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: \"auto\",\n                  className: \"my-1\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    value: qty,\n                    onChange: e => setQty(e.target.value),\n                    children: [...Array(product.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: x + 1,\n                      children: x + 1\n                    }, x + 1, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 73\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 61\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: addToCartHandler,\n                className: \"btn-block\",\n                type: \"button\",\n                disabled: product.countInStock == 0,\n                children: \" add to card \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductScreen, \"lDBTZcuE3rLJp3qsVWTmqiqsJAA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["C:/Users/younes/Desktop/ecommerce/frontend/src/screens/ProductScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Link","Row","Col","Image","ListGroup","Button","Card","Form","Rating","Loader","Message","listProductDetails","ProductScreen","match","history","qty","setQty","dispatch","productDetails","state","loading","error","product","params","id","addToCartHandler","push","image","name","rating","numReviews","price","description","countInStock","e","target","value","Array","keys","map","x"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails } from '../actions/productActions'\r\n\r\n\r\nfunction ProductScreen({match, history}) {\r\n    const [qty, setQty] = useState(1)\r\n    const dispatch = useDispatch()\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {loading , error, product} = productDetails\r\n\r\n    useEffect(() => {\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n         \r\n          <Link to= \"/\" className=\" btn btn-light my-3\"> go Back </Link>\r\n          {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    :(\r\n                    <Row>\r\n                \r\n              <Col md= {6}>\r\n                <Image src={product.image} alt={product.name} fluid /> \r\n              </Col>\r\n\r\n              <Col md= {3}>\r\n                <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h3>{product.name}</h3>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Rating  vlue={product.rating}  text={`${product.numReviews} reviews` } color={'#f8e825'}/>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            price: ${product.price}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            Description: ${product.description}\r\n                        </ListGroup.Item>\r\n                </ListGroup>\r\n                         \r\n              </Col>\r\n\r\n              <Col md= {3}>\r\n                  <Card>\r\n                    <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>price:</Col>\r\n                                    <Col>\r\n                                        <strong>${product.price}</strong>\r\n\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>status:</Col>\r\n                                    <Col>{product.countInStock > 0 ? 'in stock': 'out of stock' }</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {product.countInStock > 0 && (\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Qty</Col>\r\n                                            <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n                            <ListGroup.Item>\r\n                                <button onClick= {addToCartHandler} className=\"btn-block\" type=\"button\" disabled={product.countInStock == 0}> add to card </button>\r\n\r\n                            </ListGroup.Item>\r\n                    </ListGroup>\r\n                  </Card>\r\n                  \r\n\r\n              </Col>\r\n\r\n          </Row>\r\n            )\r\n          }\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n"]},"metadata":{},"sourceType":"module"}