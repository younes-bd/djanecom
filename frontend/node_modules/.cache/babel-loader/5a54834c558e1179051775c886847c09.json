{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\younes\\\\Desktop\\\\ecommerce\\\\frontend\\\\src\\\\screens\\\\ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { listProductDetails } from '../actions/productActions'; //import { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProductScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState('');\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    you,\n    loading,\n    error,\n    product\n  } = productDetails;\n  const your = you;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin; //const productReviewCreate = useSelector(state => state.productReviewCreate)\n  //const {\n  //loading: loadingProductReview,\n  //error: errorProductReview,\n  //success: successProductReview,\n  //} = productReviewCreate\n\n  useEffect(() => {\n    //if (successProductReview) {\n    //setRating(0)\n    //setComment('')\n    //}\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: product.image,\n            alt: product.name,\n            fluid: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Rating, {\n                value: product.rating,\n                text: `${product.numReviews} reviews`,\n                color: '#f8e825'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [\"Price: $\", product.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [\"Description: \", product.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Price:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [\"$\", product.price]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Status:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: product.countInStock > 0 ? 'In Stock' : 'Out of Stock'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 45\n              }, this), product.countInStock > 0 && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Qty\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xs: \"auto\",\n                    className: \"my-1\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                      as: \"select\",\n                      value: qty,\n                      onChange: e => setQty(e.target.value),\n                      children: [...Array(product.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: x + 1,\n                        children: x + 1\n                      }, x + 1, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 122,\n                        columnNumber: 73\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: addToCartHandler,\n                  className: \"btn-block\",\n                  disabled: product.countInStock == 0,\n                  type: \"button\",\n                  children: \"Add to Cart\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductScreen, \"99haQUJBzIS74rz71PCyD1ZRMkk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["C:/Users/younes/Desktop/ecommerce/frontend/src/screens/ProductScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Link","Row","Col","Image","ListGroup","Button","Card","Form","Rating","Loader","Message","listProductDetails","ProductScreen","match","history","qty","setQty","rating","setRating","comment","setComment","dispatch","productDetails","state","you","loading","error","product","your","userLogin","userInfo","params","id","addToCartHandler","push","submitHandler","e","preventDefault","image","name","numReviews","price","description","countInStock","target","value","Array","keys","map","x"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails} from '../actions/productActions'\r\n//import { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {you, loading, error, product } = productDetails\r\n\r\n    const your = you\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    //const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    //const {\r\n        //loading: loadingProductReview,\r\n        //error: errorProductReview,\r\n        //success: successProductReview,\r\n    //} = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        //if (successProductReview) {\r\n            //setRating(0)\r\n            //setComment('')\r\n           \r\n        //}\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: ${product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock == 0}\r\n                                                    type='button'>\r\n                                                    Add to Cart\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            \r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductScreen"]},"metadata":{},"sourceType":"module"}