{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nimport axios from 'axios';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login/', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatsh => {\n  localStorage.removeItem('userInfo');\n  dispatsh({\n    type: USER_LOGOUT\n  });\n  dispatsh({\n    type: USER_DETAILS_RESET\n  });\n  dispatsh({\n    type: ORDER_LIST_MY_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/register/', {\n      'name': name,\n      'email': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile/update/`, user, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/younes/Desktop/ecommerce/frontend/src/actions/userActions.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","axios","ORDER_LIST_MY_RESET","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","logout","dispatsh","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put"],"mappings":"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","sourcesContent":["import { USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n} from '../constants/userConstants'\r\nimport axios from 'axios'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatsh) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatsh({type: USER_LOGOUT})\r\n    dispatsh({type: USER_DETAILS_RESET})\r\n    dispatsh({type: ORDER_LIST_MY_RESET})\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n\r\n        } = getState()\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}`,\r\n            \r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,            \r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}