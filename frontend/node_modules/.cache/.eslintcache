[{"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\index.js":"1","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\store.js":"2","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\App.js":"3","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\reportWebVitals.js":"4","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\components\\Header.js":"5","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\components\\Footer.js":"6","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\HomeScreen.js":"7","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\ProductScreen.js":"8","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\CartScreen.js":"9","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\LoginScreen.js":"10","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\ProfileScreen.js":"11","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\PaymentScreen.js":"12","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\PlaceOrderScreen.js":"13","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\UserListScreen.js":"14","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\RegisterScreen.js":"15","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\OrderScreen.js":"16","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\ProductListScreen.js":"17","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\UserEditScreen.js":"18","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\ProductEditScreen.js":"19","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\ShippingScreen.js":"20","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\OrderListScreen.js":"21","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\reducers\\productReducers.js":"22","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\reducers\\userReducers.js":"23","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\reducers\\orderReducers.js":"24","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\reducers\\cartReducers.js":"25","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\components\\SearchBox.js":"26","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\components\\Message.js":"27","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\components\\Loader.js":"28","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\components\\Product.js":"29","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\components\\ProductCarousel.js":"30","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\components\\CheckoutSteps.js":"31","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\components\\Rating.js":"32","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\actions\\cartActions.js":"33","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\actions\\productActions.js":"34","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\components\\FormContainer.js":"35","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\constants\\productConstants.js":"36","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\components\\Paginate.js":"37","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\constants\\userConstants.js":"38","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\constants\\orderConstants.js":"39","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\actions\\orderActions.js":"40","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\actions\\userActions.js":"41","C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\constants\\cartConstants.js":"42","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\index.js":"43","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\store.js":"44","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\reportWebVitals.js":"45","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\App.js":"46","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\reducers\\productReducers.js":"47","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\reducers\\userReducers.js":"48","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\reducers\\cartReducers.js":"49","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\reducers\\orderReducers.js":"50","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\HomeScreen.js":"51","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\CartScreen.js":"52","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\RegisterScreen.js":"53","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\ShippingScreen.js":"54","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\LoginScreen.js":"55","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\PaymentScreen.js":"56","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\PlaceOrderScreen.js":"57","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\UserListScreen.js":"58","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\OrderScreen.js":"59","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\UserEditScreen.js":"60","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\ProductScreen.js":"61","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\ProductListScreen.js":"62","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\OrderListScreen.js":"63","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\ProfileScreen.js":"64","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\ProductEditScreen.js":"65","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\components\\Header.js":"66","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\components\\Footer.js":"67","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\components\\Product.js":"68","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\components\\Loader.js":"69","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\components\\Message.js":"70","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\components\\Paginate.js":"71","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\components\\ProductCarousel.js":"72","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\components\\FormContainer.js":"73","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\components\\CheckoutSteps.js":"74","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\components\\Rating.js":"75","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\constants\\productConstants.js":"76","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\constants\\userConstants.js":"77","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\constants\\orderConstants.js":"78","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\actions\\userActions.js":"79","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\actions\\productActions.js":"80","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\constants\\cartConstants.js":"81","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\actions\\cartActions.js":"82","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\actions\\orderActions.js":"83","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\components\\SearchBox.js":"84"},{"size":593,"mtime":1614358064532,"results":"85","hashOfConfig":"86"},{"size":2449,"mtime":1614786720548,"results":"87","hashOfConfig":"86"},{"size":2186,"mtime":1614961155734,"results":"88","hashOfConfig":"86"},{"size":362,"mtime":499162500000,"results":"89","hashOfConfig":"86"},{"size":3104,"mtime":1614961013027,"results":"90","hashOfConfig":"86"},{"size":404,"mtime":1612950785533,"results":"91","hashOfConfig":"86"},{"size":1619,"mtime":1614892806893,"results":"92","hashOfConfig":"86"},{"size":11875,"mtime":1614799627431,"results":"93","hashOfConfig":"86"},{"size":4836,"mtime":1614014002768,"results":"94","hashOfConfig":"86"},{"size":2601,"mtime":1614014023217,"results":"95","hashOfConfig":"86"},{"size":6961,"mtime":1614436861536,"results":"96","hashOfConfig":"86"},{"size":1763,"mtime":1614014032951,"results":"97","hashOfConfig":"86"},{"size":6728,"mtime":1614358808178,"results":"98","hashOfConfig":"86"},{"size":3631,"mtime":1614509952181,"results":"99","hashOfConfig":"86"},{"size":3865,"mtime":1614014049502,"results":"100","hashOfConfig":"86"},{"size":10156,"mtime":1614717825461,"results":"101","hashOfConfig":"86"},{"size":5138,"mtime":1614877415999,"results":"102","hashOfConfig":"86"},{"size":4041,"mtime":1614529495141,"results":"103","hashOfConfig":"86"},{"size":8141,"mtime":1614900953059,"results":"104","hashOfConfig":"86"},{"size":3264,"mtime":1614014053460,"results":"105","hashOfConfig":"86"},{"size":3632,"mtime":1614708793446,"results":"106","hashOfConfig":"86"},{"size":4326,"mtime":1614857630101,"results":"107","hashOfConfig":"86"},{"size":4179,"mtime":1614526020757,"results":"108","hashOfConfig":"86"},{"size":4276,"mtime":1614707150254,"results":"109","hashOfConfig":"86"},{"size":1545,"mtime":1614353659789,"results":"110","hashOfConfig":"86"},{"size":1022,"mtime":1614805756684,"results":"111","hashOfConfig":"86"},{"size":249,"mtime":1613323646400,"results":"112","hashOfConfig":"86"},{"size":481,"mtime":1613001912091,"results":"113","hashOfConfig":"86"},{"size":1043,"mtime":1614941862228,"results":"114","hashOfConfig":"86"},{"size":1462,"mtime":1614961266913,"results":"115","hashOfConfig":"86"},{"size":1645,"mtime":1613755257918,"results":"116","hashOfConfig":"86"},{"size":1955,"mtime":1614938264142,"results":"117","hashOfConfig":"86"},{"size":1365,"mtime":1614352896381,"results":"118","hashOfConfig":"86"},{"size":6253,"mtime":1614806234130,"results":"119","hashOfConfig":"86"},{"size":453,"mtime":1613388709721,"results":"120","hashOfConfig":"86"},{"size":1528,"mtime":1614596363540,"results":"121","hashOfConfig":"86"},{"size":885,"mtime":1614874999484,"results":"122","hashOfConfig":"86"},{"size":1513,"mtime":1614525867835,"results":"123","hashOfConfig":"86"},{"size":1268,"mtime":1614706985279,"results":"124","hashOfConfig":"86"},{"size":6285,"mtime":1614360227828,"results":"125","hashOfConfig":"86"},{"size":7720,"mtime":1614527986781,"results":"126","hashOfConfig":"86"},{"size":294,"mtime":1614352503566,"results":"127","hashOfConfig":"86"},{"size":593,"mtime":1614358064532,"results":"128","hashOfConfig":"129"},{"size":2449,"mtime":1614786720548,"results":"130","hashOfConfig":"129"},{"size":362,"mtime":499162500000,"results":"131","hashOfConfig":"129"},{"size":2186,"mtime":1614961155734,"results":"132","hashOfConfig":"129"},{"size":4443,"mtime":1615799671998,"results":"133","hashOfConfig":"129"},{"size":4179,"mtime":1614526020757,"results":"134","hashOfConfig":"129"},{"size":1547,"mtime":1615800950543,"results":"135","hashOfConfig":"129"},{"size":4276,"mtime":1614707150254,"results":"136","hashOfConfig":"129"},{"size":1619,"mtime":1614892806893,"results":"137","hashOfConfig":"129"},{"size":4836,"mtime":1614014002768,"results":"138","hashOfConfig":"129"},{"size":3865,"mtime":1614014049502,"results":"139","hashOfConfig":"129"},{"size":3264,"mtime":1614014053460,"results":"140","hashOfConfig":"129"},{"size":2601,"mtime":1614014023217,"results":"141","hashOfConfig":"129"},{"size":1763,"mtime":1614014032951,"results":"142","hashOfConfig":"129"},{"size":6728,"mtime":1614358808178,"results":"143","hashOfConfig":"129"},{"size":3631,"mtime":1614509952181,"results":"144","hashOfConfig":"129"},{"size":10156,"mtime":1614717825461,"results":"145","hashOfConfig":"129"},{"size":4041,"mtime":1614529495141,"results":"146","hashOfConfig":"129"},{"size":11875,"mtime":1614799627431,"results":"147","hashOfConfig":"129"},{"size":5138,"mtime":1614877415999,"results":"148","hashOfConfig":"129"},{"size":3632,"mtime":1614708793446,"results":"149","hashOfConfig":"129"},{"size":6961,"mtime":1614436861536,"results":"150","hashOfConfig":"129"},{"size":8141,"mtime":1614900953059,"results":"151","hashOfConfig":"129"},{"size":3104,"mtime":1614961013027,"results":"152","hashOfConfig":"129"},{"size":404,"mtime":1612950785533,"results":"153","hashOfConfig":"129"},{"size":1043,"mtime":1614941862228,"results":"154","hashOfConfig":"129"},{"size":481,"mtime":1613001912091,"results":"155","hashOfConfig":"129"},{"size":249,"mtime":1613323646400,"results":"156","hashOfConfig":"129"},{"size":885,"mtime":1614874999484,"results":"157","hashOfConfig":"129"},{"size":1462,"mtime":1614961266913,"results":"158","hashOfConfig":"129"},{"size":453,"mtime":1613388709721,"results":"159","hashOfConfig":"129"},{"size":1645,"mtime":1613755257918,"results":"160","hashOfConfig":"129"},{"size":1955,"mtime":1614938264142,"results":"161","hashOfConfig":"129"},{"size":1528,"mtime":1614596363540,"results":"162","hashOfConfig":"129"},{"size":1513,"mtime":1614525867835,"results":"163","hashOfConfig":"129"},{"size":1268,"mtime":1614706985279,"results":"164","hashOfConfig":"129"},{"size":7717,"mtime":1615801468076,"results":"165","hashOfConfig":"129"},{"size":6253,"mtime":1614806234130,"results":"166","hashOfConfig":"129"},{"size":294,"mtime":1614352503566,"results":"167","hashOfConfig":"129"},{"size":1405,"mtime":1615800539528,"results":"168","hashOfConfig":"129"},{"size":6285,"mtime":1614360227828,"results":"169","hashOfConfig":"129"},{"size":1042,"mtime":1615133882368,"results":"170","hashOfConfig":"129"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"141x51u",{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cs98rh",{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\index.js",[],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\store.js",[],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\App.js",["356"],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\components\\Header.js",["357"],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\HomeScreen.js",["358"],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\ProductScreen.js",["359"],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\LoginScreen.js",["360","361"],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\ProfileScreen.js",["362","363"],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\PaymentScreen.js",["364"],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\PlaceOrderScreen.js",["365","366"],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\UserListScreen.js",["367"],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\RegisterScreen.js",["368","369","370"],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\OrderScreen.js",["371"],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\ProductListScreen.js",["372"],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\UserEditScreen.js",["373"],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\ProductEditScreen.js",[],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\ShippingScreen.js",["374"],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\screens\\OrderListScreen.js",["375"],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\components\\Message.js",[],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\components\\Product.js",[],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\components\\ProductCarousel.js",[],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\actions\\productActions.js",["376"],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\actions\\orderActions.js",["377","378","379"],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\actions\\userActions.js",["380","381"],"C:\\Users\\younes\\Desktop\\ecommerce\\backend\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\index.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\store.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\App.js",["382"],"import {Container} from 'react-bootstrap'\nimport { HashRouter as Router, Route, Switch  } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <Header/>\n      <main>\n        <Container>\n           <Route path=\"/\" component={HomeScreen} exact/>\n           <Route path=\"/login\" component={LoginScreen} />\n           <Route path=\"/register\" component={RegisterScreen} />\n           <Route path=\"/profile\" component={ProfileScreen} />\n           <Route path=\"/shipping\" component={ShippingScreen} />\n           <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n           <Route path=\"/order/:id\" component={OrderScreen} />\n           <Route path=\"/payment\" component={PaymentScreen} />\n           <Route path='/product/:id' component={ProductScreen} />\n           <Route path='/cart/:id?' component={CartScreen} />\n           <Route path='/admin/userlist' component={UserListScreen} />\n           <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n           <Route path='/admin/productlist' component={ProductListScreen} />\n           <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n           <Route path='/admin/Orderlist' component={OrderListScreen} />\n        </Container>\n      </main>\n      <Footer/>\n    </Router>\n  );\n}\n\nexport default App;","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\HomeScreen.js",["383"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n    \r\n    \r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                       \r\n                    </div>\r\n            }\r\n            <Paginate page={page} pages={pages} keyword={keyword} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\RegisterScreen.js",["384","385","386"],"import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Row, Col, Button, Form, FormLabel, FormControl} from 'react-bootstrap'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\n\r\nfunction RegisterScreen({location, history}) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password != confirmPassword){\r\n            setMessage('password donot match')\r\n        }else{\r\n            dispatch(register(name, email, password))\r\n        } \r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n          <h1> register</h1>\r\n          {message && <Message variant='danger'>{message}</Message>}\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {loading && <Loader />}\r\n          <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                  <Form.Label>Name </Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    type= 'name'\r\n                    placeholder= 'Enter name'\r\n                    value= {name}\r\n                    onChange={(e)=> setName(e.target.value)}\r\n                  >\r\n                </Form.Control>\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId='email'>\r\n                  <Form.Label>Email Address </Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    type= 'email'\r\n                    placeholder= 'Enter email'\r\n                    value= {email}\r\n                    onChange={(e)=> setEmail(e.target.value)}\r\n                  >\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='password'>\r\n                <Form.Label>Password </Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    type= 'password'\r\n                    placeholder= 'Enter Password'\r\n                    value= {password}\r\n                    onChange={(e)=> setPassword(e.target.value)}\r\n                  >\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='passwordConfirm'>\r\n                <Form.Label> Confirm Password </Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    type= 'password'\r\n                    placeholder= 'Confirm Password'\r\n                    value= {confirmPassword}\r\n                    onChange={(e)=> setConfirmPassword(e.target.value)}\r\n                  >\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Button type='submit' variant='primary'> register </Button>\r\n         </Form>\r\n         <Row className='py-3'>\r\n                <Col>\r\n                    have an account? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        sign in\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\ShippingScreen.js",["387"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\LoginScreen.js",["388","389"],"import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Row, Col, Button, Form, FormLabel, FormControl} from 'react-bootstrap'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\n\r\nfunction LoginScreen({location, history}) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log('submitted')\r\n        dispatch(login(email, password))\r\n    }\r\n    return (\r\n        <div>\r\n        <FormContainer>\r\n          <h1> sign in</h1>\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {loading && <Loader />}\r\n          <Form onSubmit={submitHandler}>\r\n\r\n              <Form.Group controlId='email'>\r\n                  <Form.Label>Email Address </Form.Label>\r\n                  <Form.Control\r\n                    type= 'email'\r\n                    placeholder= 'Enter email'\r\n                    value= {email}\r\n                    onChange={(e)=> setEmail(e.target.value)}\r\n                  >\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='password'>\r\n                <Form.Label>Password </Form.Label>\r\n                  <Form.Control\r\n                    type= 'password'\r\n                    placeholder= 'Enter Password'\r\n                    value= {password}\r\n                    onChange={(e)=> setPassword(e.target.value)}\r\n                  >\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n\r\n                <Button type='submit' variant='primary'>sign in </Button>\r\n          </Form>\r\n\r\n          <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\PaymentScreen.js",["390"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\PlaceOrderScreen.js",["391","392"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\UserListScreen.js",["393"],"import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete ])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <h6><i className='fas fa-edit'></i>edit</h6>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <h6><i className='fas fa-trash'></i> remove </h6>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\OrderScreen.js",["394"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay,successDeliver])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <h1>Order: {order._id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n                                    <p><strong>Name: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Shipping: </strong>\r\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Delivered</Message>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment Method</h2>\r\n                                    <p>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ? (\r\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Paid</Message>\r\n                                        )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                        Order is empty\r\n                            </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Items:</Col>\r\n                                            <Col>${order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping:</Col>\r\n                                            <Col>${order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax:</Col>\r\n                                            <Col>${order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total:</Col>\r\n                                            <Col>${order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n\r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loader />}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Loader />\r\n                                            ) : (\r\n                                                    <PayPalButton\r\n                                                        amount={order.totalPrice}\r\n                                                        onSuccess={successPaymentHandler}\r\n                                                    />\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                </ListGroup>\r\n                                \r\n                                {loadingDeliver && <Loader />}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\UserEditScreen.js",["395"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions' \r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n                \r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\ProductScreen.js",["396"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const productId = match.params.id\r\n\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product} = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(productId))\r\n\r\n    }, [dispatch,productId, product, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment,\r\n        }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: ${product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock == 0}\r\n                                                    type='button'>\r\n                                                    Add to Cart\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                     {product?.reviews?.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n                                   \r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>                               \r\n                            \r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductScreen","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\ProductListScreen.js",["397"],"import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct} from '../actions/productActions'  // \r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        <th>BRAND</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>${product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\OrderListScreen.js",["398"],"import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\ProfileScreen.js",["399","400"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading:loadingOrders, error:errorOrders, orders } = orderListMy\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                            <Table striped responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Date</th>\r\n                                        <th>Total</th>\r\n                                        <th>Paid</th>\r\n                                        <th>Delivered</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td>${order.totalPrice}</td>\r\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                                <h6> Not <i className='fas fa-times' style={{ color: 'red' }}></i></h6>\r\n                                            )}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button className='btn-sm'>Details</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\screens\\ProductEditScreen.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\components\\Header.js",["401"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\n\r\nfunction Header() {\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispash = useDispatch()\r\n\r\n    const logoutHandler = () =>{\r\n        dispash(logout())     \r\n    }\r\n\r\n    return (\r\n        \r\n            <header>\r\n            \r\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\"  collapseonselect>\r\n                    <Container>\r\n\r\n                    <LinkContainer to=\"/\">\r\n                        <Navbar.Brand >proshop</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox />\r\n                        <Nav className=\"ml-auto\">\r\n\r\n                        <LinkContainer to=\"/cart\">\r\n                            <Nav.Link><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                         </LinkContainer>\r\n\r\n                         {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                                    </LinkContainer>\r\n                                )}\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                            <NavDropdown title='Admin' id='adminmenue'>\r\n                                <LinkContainer to='/admin/userlist'>\r\n                                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                <LinkContainer to='/admin/productlist'>\r\n                                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                <LinkContainer to='/admin/orderlist'>\r\n                                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                            </NavDropdown>\r\n                            )}\r\n\r\n\r\n\r\n                        </Nav>\r\n\r\n                    </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar> \r\n            \r\n        </header>\r\n        \r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\components\\Product.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\components\\Message.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\components\\ProductCarousel.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\actions\\userActions.js",["402","403"],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\actions\\productActions.js",["404"],"import axios from 'axios'\r\nimport {PRODUCT_LIST_REQUEST,\r\n        PRODUCT_LIST_SUCCESS,\r\n        PRODUCT_LIST_FAIL,\r\n\r\n        PRODUCT_DETAILS_REQUEST,\r\n        PRODUCT_DETAILS_SUCCESS,\r\n        PRODUCT_DETAILS_FAIL,\r\n\r\n        PRODUCT_DELETE_REQUEST,\r\n        PRODUCT_DELETE_SUCCESS,\r\n        PRODUCT_DELETE_FAIL,\r\n\r\n        PRODUCT_CREATE_REQUEST,\r\n        PRODUCT_CREATE_SUCCESS,\r\n        PRODUCT_CREATE_FAIL,\r\n\r\n        PRODUCT_UPDATE_REQUEST,\r\n        PRODUCT_UPDATE_SUCCESS,\r\n        PRODUCT_UPDATE_FAIL,\r\n\r\n        PRODUCT_CREATE_REVIEW_REQUEST,\r\n        PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n        PRODUCT_TOP_REQUEST,\r\n        PRODUCT_TOP_SUCCESS,\r\n        PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\actions\\orderActions.js",["405","406","407"],"import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","C:\\Users\\younes\\Desktop\\ecommerce1\\backend\\frontend\\src\\components\\SearchBox.js",[],{"ruleId":"408","severity":1,"message":"409","line":2,"column":39,"nodeType":"410","messageId":"411","endLine":2,"endColumn":45},{"ruleId":"408","severity":1,"message":"412","line":3,"column":34,"nodeType":"410","messageId":"411","endLine":3,"endColumn":37},{"ruleId":"408","severity":1,"message":"413","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"414","severity":1,"message":"415","line":145,"column":84,"nodeType":"416","messageId":"417","endLine":145,"endColumn":86},{"ruleId":"408","severity":1,"message":"418","line":3,"column":33,"nodeType":"410","messageId":"411","endLine":3,"endColumn":42},{"ruleId":"408","severity":1,"message":"419","line":3,"column":44,"nodeType":"410","messageId":"411","endLine":3,"endColumn":55},{"ruleId":"408","severity":1,"message":"420","line":2,"column":10,"nodeType":"410","messageId":"411","endLine":2,"endColumn":14},{"ruleId":"414","severity":1,"message":"421","line":54,"column":22,"nodeType":"416","messageId":"417","endLine":54,"endColumn":24},{"ruleId":"408","severity":1,"message":"422","line":1,"column":27,"nodeType":"410","messageId":"411","endLine":1,"endColumn":36},{"ruleId":"408","severity":1,"message":"413","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"423","severity":1,"message":"424","line":35,"column":8,"nodeType":"425","endLine":35,"endColumn":26,"suggestions":"426"},{"ruleId":"408","severity":1,"message":"413","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"408","severity":1,"message":"418","line":3,"column":33,"nodeType":"410","messageId":"411","endLine":3,"endColumn":42},{"ruleId":"408","severity":1,"message":"419","line":3,"column":44,"nodeType":"410","messageId":"411","endLine":3,"endColumn":55},{"ruleId":"414","severity":1,"message":"421","line":33,"column":22,"nodeType":"416","messageId":"417","endLine":33,"endColumn":24},{"ruleId":"423","severity":1,"message":"427","line":65,"column":8,"nodeType":"425","endLine":65,"endColumn":61,"suggestions":"428"},{"ruleId":"408","severity":1,"message":"413","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"423","severity":1,"message":"429","line":44,"column":8,"nodeType":"425","endLine":44,"endColumn":46,"suggestions":"430"},{"ruleId":"408","severity":1,"message":"422","line":1,"column":27,"nodeType":"410","messageId":"411","endLine":1,"endColumn":36},{"ruleId":"408","severity":1,"message":"413","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"408","severity":1,"message":"431","line":113,"column":17,"nodeType":"410","messageId":"411","endLine":113,"endColumn":21},{"ruleId":"408","severity":1,"message":"432","line":14,"column":5,"nodeType":"410","messageId":"411","endLine":14,"endColumn":20},{"ruleId":"408","severity":1,"message":"433","line":19,"column":5,"nodeType":"410","messageId":"411","endLine":19,"endColumn":24},{"ruleId":"408","severity":1,"message":"434","line":28,"column":5,"nodeType":"410","messageId":"411","endLine":28,"endColumn":24},{"ruleId":"408","severity":1,"message":"435","line":19,"column":5,"nodeType":"410","messageId":"411","endLine":19,"endColumn":30},{"ruleId":"408","severity":1,"message":"436","line":33,"column":5,"nodeType":"410","messageId":"411","endLine":33,"endColumn":22},{"ruleId":"408","severity":1,"message":"409","line":2,"column":39,"nodeType":"410","messageId":"411","endLine":2,"endColumn":45},{"ruleId":"408","severity":1,"message":"413","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"408","severity":1,"message":"418","line":3,"column":33,"nodeType":"410","messageId":"411","endLine":3,"endColumn":42},{"ruleId":"408","severity":1,"message":"419","line":3,"column":44,"nodeType":"410","messageId":"411","endLine":3,"endColumn":55},{"ruleId":"414","severity":1,"message":"421","line":33,"column":22,"nodeType":"416","messageId":"417","endLine":33,"endColumn":24},{"ruleId":"408","severity":1,"message":"422","line":1,"column":27,"nodeType":"410","messageId":"411","endLine":1,"endColumn":36},{"ruleId":"408","severity":1,"message":"418","line":3,"column":33,"nodeType":"410","messageId":"411","endLine":3,"endColumn":42},{"ruleId":"408","severity":1,"message":"419","line":3,"column":44,"nodeType":"410","messageId":"411","endLine":3,"endColumn":55},{"ruleId":"408","severity":1,"message":"422","line":1,"column":27,"nodeType":"410","messageId":"411","endLine":1,"endColumn":36},{"ruleId":"408","severity":1,"message":"413","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"423","severity":1,"message":"424","line":35,"column":8,"nodeType":"425","endLine":35,"endColumn":26,"suggestions":"437"},{"ruleId":"408","severity":1,"message":"413","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"423","severity":1,"message":"427","line":65,"column":8,"nodeType":"425","endLine":65,"endColumn":61,"suggestions":"438"},{"ruleId":"423","severity":1,"message":"429","line":44,"column":8,"nodeType":"425","endLine":44,"endColumn":46,"suggestions":"439"},{"ruleId":"414","severity":1,"message":"415","line":145,"column":84,"nodeType":"416","messageId":"417","endLine":145,"endColumn":86},{"ruleId":"408","severity":1,"message":"413","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"408","severity":1,"message":"413","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":25},{"ruleId":"408","severity":1,"message":"420","line":2,"column":10,"nodeType":"410","messageId":"411","endLine":2,"endColumn":14},{"ruleId":"414","severity":1,"message":"421","line":54,"column":22,"nodeType":"416","messageId":"417","endLine":54,"endColumn":24},{"ruleId":"408","severity":1,"message":"412","line":3,"column":34,"nodeType":"410","messageId":"411","endLine":3,"endColumn":37},{"ruleId":"408","severity":1,"message":"435","line":19,"column":5,"nodeType":"410","messageId":"411","endLine":19,"endColumn":30},{"ruleId":"408","severity":1,"message":"436","line":33,"column":5,"nodeType":"410","messageId":"411","endLine":33,"endColumn":22},{"ruleId":"408","severity":1,"message":"431","line":113,"column":17,"nodeType":"410","messageId":"411","endLine":113,"endColumn":21},{"ruleId":"408","severity":1,"message":"432","line":14,"column":5,"nodeType":"410","messageId":"411","endLine":14,"endColumn":20},{"ruleId":"408","severity":1,"message":"433","line":19,"column":5,"nodeType":"410","messageId":"411","endLine":19,"endColumn":24},{"ruleId":"408","severity":1,"message":"434","line":28,"column":5,"nodeType":"410","messageId":"411","endLine":28,"endColumn":24},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FormLabel' is defined but never used.","'FormControl' is defined but never used.","'Link' is defined but never used.","Expected '!==' and instead saw '!='.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.","ArrayExpression",["440"],"React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["441"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["442"],"'data' is assigned a value but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'USER_UPDATE_RESET' is defined but never used.",["443"],["444"],["445"],{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"446","fix":"452"},{"desc":"448","fix":"453"},{"desc":"450","fix":"454"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"455","text":"456"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"457","text":"458"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"459","text":"460"},{"range":"461","text":"456"},{"range":"462","text":"458"},{"range":"463","text":"460"},[1302,1320],"[success, history, order._id, dispatch]",[2336,2389],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]",[1477,1515],"[user, userId, successUpdate, history, dispatch]",[1302,1320],[2336,2389],[1477,1515]]